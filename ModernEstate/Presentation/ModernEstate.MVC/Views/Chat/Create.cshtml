@using ModernEstate.Application.ViewModels.Chats
@model CreateChatVM
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Form</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .chat-container {
            max-width: 700px;
            margin: 0 auto;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }

        .chat-header {
            background-color: #075e54;
            color: #fff;
            padding: 15px;
            text-align: center;
            border-radius: 10px 10px 0 0;
        }

        .messages {
            margin-top: 20px;
            max-height: 500px;
            overflow-y: auto;
            padding: 10px;
            background-color: #f9f9f9;
            border-radius: 5px;
        }

        .message {
            padding: 10px;
            margin-bottom: 5px;
            border-radius: 15px;
            width: 100%;
            max-width: 15%; 
            word-wrap: break-word;
            font-size: 16px;
        }

        .user-message {
            background-color: #e1f7d5;
            text-align: left;
            margin-right: auto;
        }

        .agent-message {
            background-color: #d1e7ff;
            text-align: right;
            margin-left: auto;
        }

        .message strong {
            font-size: 13px;
            color: #888;
        }

        .message p {
            font-size: 16px;
            margin-top: 2px;
        }

        .chat-input {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 10px;
        }

            .chat-input textarea {
                flex-grow: 1;
                padding: 10px;
                border-radius: 20px;
                border: 1px solid #ddd;
                resize: none;
                width: 85%;
                margin-right: 10px;
            }

            .chat-input button {
                background-color: #075e54;
                border: none;
                border-radius: 50%;
                color: #fff;
                padding: 10px;
                display: flex;
                align-items: center;
                justify-content: center;
                width: 40px;
                height: 40px;
            }

                .chat-input button:hover {
                    background-color: #34b7f1;
                }

        .send-icon {
            width: 20px;
            height: 20px;
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">
            <h5>@Model.Agent.FirstOrDefault()?.FullName</h5>
        </div>

        <!-- Previous messages -->
        <div class="messages" id="messages">
            @foreach (var message in Model.Messages)
            {
                var currentUserName = User.Identity.Name;

                <div class="message @(message.UserId == currentUserName ? "user-message" : "agent-message")">
                    <div>
                        <strong>@(message.UserId == currentUserName ? "You" : User.Identity.Name)</strong>
                        <p>@message.Text</p>
                    </div>
                </div>
            }
        </div>

        <!-- New message form -->
        <form method="post" id="chat-form">
            <div class="chat-input">
                <textarea asp-for="Text" id="Text" rows="1" placeholder="Your Message" required></textarea>
                <button type="submit">
                    <img src="https://img.icons8.com/ios-filled/50/ffffff/paper-plane.png" alt="Send" class="send-icon" />
                </button>
            </div>
        </form>
    </div>

    <script>
        // Autoscroll to the latest message after a new message is sent
        const messages = document.getElementById("messages");
        messages.scrollTop = messages.scrollHeight;

        // Form submit handling
        document.getElementById("chat-form").onsubmit = function (event) {
            setTimeout(function () {
                messages.scrollTop = messages.scrollHeight; // Scroll to the bottom after submitting
            }, 500); // Small delay to ensure message is added before scrolling
        };
    </script>
</body>
</html>
